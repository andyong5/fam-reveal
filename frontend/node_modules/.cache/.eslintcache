[{"/home/c65382/Desktop/fam-dev/frontend/src/index.js":"1","/home/c65382/Desktop/fam-dev/frontend/src/App.js":"2","/home/c65382/Desktop/fam-dev/frontend/src/Home.js":"3","/home/c65382/Desktop/fam-dev/frontend/src/Reveal.js":"4","/home/c65382/Desktop/fam-dev/frontend/src/Add.js":"5","/home/c65382/Desktop/fam-dev/frontend/src/Pledges.js":"6"},{"size":311,"mtime":1635634599308,"results":"7","hashOfConfig":"8"},{"size":810,"mtime":1635718813978,"results":"9","hashOfConfig":"8"},{"size":2309,"mtime":1635733592362,"results":"10","hashOfConfig":"8"},{"size":1521,"mtime":1635733858765,"results":"11","hashOfConfig":"8"},{"size":2750,"mtime":1635731458793,"results":"12","hashOfConfig":"8"},{"size":2198,"mtime":1635734139440,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1fr7ldm",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/c65382/Desktop/fam-dev/frontend/src/index.js",[],["30","31"],"/home/c65382/Desktop/fam-dev/frontend/src/App.js",[],"/home/c65382/Desktop/fam-dev/frontend/src/Home.js",["32"],"import React, { useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Home.css\";\n\nfunction Home() {\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [inputClass, setInputClass] = useState(\"nes-input\");\n  const history = useHistory();\n\n  const handleSubmission = (event) => {\n    event.preventDefault();\n    console.log(name);\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    console.log(formData);\n    fetch(\"/reveal\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if('message' in data){\n          setError(true)\n          setInputClass(\"nes-input is-error\")\n        } else {\n          console.log(data);\n          setError(false);\n          setInputClass(\"nes-input\");\n          history.push(\"/reveal\", {params: data})\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        console.log('got in here')\n        setError(true)\n      });\n  };\n\n  return (\n    <div class=\"work\">\n      <div class=\"center\">\n        <div class=\"nes-container is-rounded\">\n          <p class=\"title\" id=\"welcome\">\n            Welcome to Fam Reveal\n          </p>\n          <form class=\"container\" onSubmit={handleSubmission}>\n            <label>Choose your family:</label>\n            <div>\n              <i class=\"nes-bulbasaur is-small\"></i>\n              <i class=\"nes-charmander is-small\"></i>\n              <i class=\"nes-squirtle is-small\"></i>\n            </div>\n            <br></br>\n            <div class=\"nes-field\">\n              <input\n                type=\"text\"\n                class={inputClass}\n                placeholder=\"Your Name\"\n                onChange={(e) => setName(e.target.value)}\n                required\n              ></input>\n              {error ? (\n                <label class=\"nes-text is-error\" id=\"error\">\n                  Wrong name. Please try again.\n                </label>\n              ) : null}\n            </div>\n            <button type=\"button\" class=\"nes-btn is-success reveal_btn\" type=\"submit\">\n              Reveal!\n            </button>\n            <i class=\"nes-pokeball is-small\"></i>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/home/c65382/Desktop/fam-dev/frontend/src/Reveal.js",["33"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport \"./Reveal.css\";\n\nfunction Reveal() {\n  const [name, setName] = useState(\"\");\n  const [fam, setFam] = useState(\"\");\n  const [pokemon, setPokemon] = useState(\"\");\n  const history = useHistory();\n  const location = useLocation();\n  const data = location.state.params;\n\n  useEffect(() => {\n    setName(data.name)\n    setFam(data.fam)\n    if (fam === \"Tight\") {\n      setPokemon(\"nes-charmander\");\n    }\n    if (fam === \"Loose\") {\n      setPokemon(\"nes-squirtle\");\n    }\n    if (fam === \"Close\") {\n      setPokemon(\"nes-bulbasaur\");\n    }\n  },[]);\n\n  function handleClick() {\n    history.push(\"/\");\n  }\n\n  return (\n    <div>\n      <button class=\"nes-btn is-success margin\" onClick={handleClick}>Back</button>\n      <div class=\"work\">\n        <div class=\"center\">\n          <div class=\"nes-container is-rounded\">\n            <p class=\"title\" id=\"welcome\">\n              <span class={fam}>Welcome to {fam} Fam!</span>\n            </p>\n            <div class=\"row\">\n              <i class={pokemon + \" flip\"}></i>\n              <div class=\"vertical\">\n                <h1 class={fam} id=\"name\">\n                  {name}\n                </h1>\n              </div>\n              <i class={pokemon}></i>\n            </div>\n            <br></br>\n            <img src={\"./\" + fam + \".gif\"} alt={fam}></img>\n            <br></br>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Reveal;\n","/home/c65382/Desktop/fam-dev/frontend/src/Add.js",["34"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Pledges from \"./Pledges\";\nimport \"./Add.css\";\n\nfunction Add() {\n  const [pledges, setPledges] = useState([]);\n  const [fam, setFam] = useState(\"Tight\");\n  const [name, setName] = useState(\"\");\n\n  const history = useHistory();\n  function handleClick() {\n    history.push(\"/\");\n  }\n\n  useEffect(() => {\n    fetch(\"/pledges\")\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setPledges(data);\n      })\n      .catch((error) => {});\n  }, []);\n\n  const handleSubmission = (event) => {\n    //event.preventDefault();\n    console.log(name);\n    const formData = new FormData();\n    formData.append(\"fam\", fam);\n    formData.append(\"name\", name);\n    console.log(formData);\n    fetch(\"/add\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data)\n        setName(\"\");\n      })\n      .catch((error) => {\n        console.log(error);\n        console.log('got in here')\n      });\n  };\n\n  return (\n    <div>\n      <button class=\"nes-btn is-success margin\" onClick={handleClick}>\n        Back\n      </button>\n      <div class=\"work\">\n        <div class=\"center\">\n          <div class=\"nes-container is-rounded\">\n            <p class=\"title\" id=\"welcome\">\n              Add Pledge\n            </p>\n            <form class=\"add_cont\" onSubmit={handleSubmission}>\n              <div class=\"row\">\n                <div class=\"nes-field\">\n                  <label for=\"name_field\">Pledge Name</label>\n                  <input type=\"text\" id=\"name_field\" class={\"nes-input \" + fam} onChange={(e) => setName(e.target.value)} required></input>\n                </div>\n                <div class=\"nes-select narrow\">\n                  <label for=\"name_field\">Family</label>\n                  <select id=\"default_select\" class={\"narrow \" + fam} onChange={(e) => setFam(e.target.value)} required>\n                    <option selected value=\"Tight\" class=\"Tight\">\n                      Tight\n                    </option>\n                    <option value=\"Loose\" class=\"Loose\">\n                      Loose\n                    </option>\n                    <option value=\"Close\" class=\"Close\">\n                      Close\n                    </option>\n                  </select>\n                </div>\n              </div>\n              <button type=\"button\" class=\"nes-btn is-success add_btn\" type=\"submit\">\n                Add Pledge\n              </button>\n            </form>\n            <Pledges pledges={pledges} setPledges={setPledges}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Add;\n","/home/c65382/Desktop/fam-dev/frontend/src/Pledges.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":69,"column":73,"nodeType":"41","endLine":69,"endColumn":86},{"ruleId":"42","severity":1,"message":"43","line":25,"column":5,"nodeType":"44","endLine":25,"endColumn":7,"suggestions":"45"},{"ruleId":"39","severity":1,"message":"40","line":80,"column":72,"nodeType":"41","endLine":80,"endColumn":85},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data.fam', 'data.name', and 'fam'. Either include them or remove the dependency array.","ArrayExpression",["48"],"no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [data.fam, data.name, fam]",{"range":"51","text":"52"},[657,659],"[data.fam, data.name, fam]"]